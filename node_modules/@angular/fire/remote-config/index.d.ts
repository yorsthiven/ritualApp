import * as rxjs from 'rxjs';
import { RemoteConfig as RemoteConfig$1, activate as activate$1, ensureInitialized as ensureInitialized$1, fetchAndActivate as fetchAndActivate$1, fetchConfig as fetchConfig$1, getAll as getAll$2, getBoolean as getBoolean$2, getNumber as getNumber$2, getRemoteConfig as getRemoteConfig$1, getString as getString$2, getValue as getValue$2, isSupported as isSupported$1, setCustomSignals as setCustomSignals$1, setLogLevel as setLogLevel$1 } from 'firebase/remote-config';
export * from 'firebase/remote-config';
import * as i0 from '@angular/core';
import { Injector, EnvironmentProviders } from '@angular/core';
import { getAll as getAll$1, getBoolean as getBoolean$1, getNumber as getNumber$1, getString as getString$1, getValue as getValue$1 } from 'rxfire/remote-config';

interface RemoteConfig extends RemoteConfig$1 {
}
declare class RemoteConfig {
    constructor(remoteConfig: RemoteConfig$1);
}
interface RemoteConfigInstances extends Array<RemoteConfig$1> {
}
declare class RemoteConfigInstances {
    constructor();
}
declare const remoteConfigInstance$: rxjs.Observable<RemoteConfig$1>;

declare class RemoteConfigModule {
    constructor();
    static ɵfac: i0.ɵɵFactoryDeclaration<RemoteConfigModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<RemoteConfigModule, never, never, never>;
    static ɵinj: i0.ɵɵInjectorDeclaration<RemoteConfigModule>;
}
declare function provideRemoteConfig(fn: (injector: Injector) => RemoteConfig$1, ...deps: any[]): EnvironmentProviders;

declare const getAllChanges: typeof getAll$1;
declare const getBooleanChanges: typeof getBoolean$1;
declare const getNumberChanges: typeof getNumber$1;
declare const getStringChanges: typeof getString$1;
declare const getValueChanges: typeof getValue$1;

declare const activate: typeof activate$1;
declare const ensureInitialized: typeof ensureInitialized$1;
declare const fetchAndActivate: typeof fetchAndActivate$1;
declare const fetchConfig: typeof fetchConfig$1;
declare const getAll: typeof getAll$2;
declare const getBoolean: typeof getBoolean$2;
declare const getNumber: typeof getNumber$2;
declare const getRemoteConfig: typeof getRemoteConfig$1;
declare const getString: typeof getString$2;
declare const getValue: typeof getValue$2;
declare const isSupported: typeof isSupported$1;
declare const setCustomSignals: typeof setCustomSignals$1;
declare const setLogLevel: typeof setLogLevel$1;

export { RemoteConfig, RemoteConfigInstances, RemoteConfigModule, activate, ensureInitialized, fetchAndActivate, fetchConfig, getAll, getAllChanges, getBoolean, getBooleanChanges, getNumber, getNumberChanges, getRemoteConfig, getString, getStringChanges, getValue, getValueChanges, isSupported, provideRemoteConfig, remoteConfigInstance$, setCustomSignals, setLogLevel };
